# The config recipe.
# https://rasa.com/docs/rasa/model-configuration/
recipe: default.v1

# Configuration for Rasa NLU.
# https://rasa.com/docs/rasa/nlu/components/
language: en

pipeline:
# # No configuration for the NLU pipeline was provided. The following default pipeline was used to train your model.
# # If you'd like to customize it, uncomment and adjust the pipeline.
# # See https://rasa.com/docs/rasa/tuning-your-model for more information.
#   - name: WhitespaceTokenizer
#   - name: RegexFeaturizer
#   - name: LexicalSyntacticFeaturizer
#   - name: CountVectorsFeaturizer
#   - name: CountVectorsFeaturizer
#     analyzer: char_wb
#     min_ngram: 1
#     max_ngram: 4
#   - name: DIETClassifier
#     epochs: 100
#     constrain_similarities: true
#   - name: EntitySynonymMapper
#   - name: ResponseSelector
#     epochs: 100
#     constrain_similarities: true
#   - name: FallbackClassifier
#     threshold: 0.3
#     ambiguity_threshold: 0.1
  # 
  - name: SpacyNLP
    model: en_core_web_trf
    case_sensitive: False
  # Creates tokens using spaCy tokenizer
  ## requires: SpacyNLP
  ## outputs: tokens
  - name: SpacyTokenizer
  # Creates a vector representation of user message and response.
  # Creates features for entity extraction, intent classification, and 
  # response classification.
  ## requires: SpacyNLP
  ## outputs: dense_features of user messages and responses
  - name: SpacyFeaturizer
    pooling: mean
  # Creates lexixal and syntactic features for a user message to support entity extraction.
  # Moves with a sliding window over every token int the user message and creaets features
  # according to the configuration.
  ## requires: tokens
  ## outputs: sparse_features for user messages 
  - name: LexicalSyntacticFeaturizer
    features: [
    ["low", "title", "upper"],
    ["BOS", "EOS", "low", "upper", "title", "digit", "pos"],
    ["low", "title", "upper"],
    ]
  # Creates bag-of-words representation of user messages, intents, and responses.
  # Used for intent classification and response selection.
  ## requires: tokens
  ## outputs: sparse_features for user messages, intents, and responses.
  - name: CountVectorsFeaturizer
  # this one for word-ngram features
  - name: CountVectorsFeaturizer
    analyzer: "char_wb"
    min_ngram: 1
    max_ngram: 4
  # Dual Intent Entity Transformer used for intent classification adn entity recognition.
  ## requires: dense_features and/or sparse_features for user messages and optionally intent.
  ## outputs: entities, intent, and intent_ranking
  - name: DIETClassifier
    epochs: 100
    constrain_similarities: true
  # spaCy entity extraction
  ## requires: SpacyNLP
  ## outputs: entities
  - name: SpacyEntityExtractor
  - name: RegexEntityExtractor
    case_sensitive: False
    use_look_up_tables: True
    use_regexes: True
  # Conditional random field (CRF) entity extraction.
  ## requires: tokens and dense_features (optional)
  ## outputs: entities
  - name: CRFEntityExtractor
    # BILOU_flag determines whether to use BILOU tagging or not.
    BILOU_flag: True
    # features to extract in the sliding window
    features: [
      ["low", "title", "upper"],
      [
        "bias",
        "low",
        "prefix5",
        "prefix2",
        "suffix5",
        "suffix3",
        "suffix2",
        "upper",
        "title",
        "pos",
        "digit",
        "pattern",
        "text_dense_features"
      ],
      ["low", "title", "upper"],
    ]
    # The maximum number of iterations for optimization algorithms.
    max_iterations: 50
    # weight of the L1 regularization
    L1_c: 0.1
    # weight of the L2 regularization
    L2_c: 0.1
    # Name of dense featurizers to use.
    # If list is empty all available dense features are used.
    featurizers: []
  # Maps synonymous entity values to the same value
  ## requires: extractor from Entity Extractors
  ## outputs: modifies existing entities that previous entity extraction components found.
  - name: EntitySynonymMapper
  # Classifies a message with the intent nlu_fallback if the NLU intent classification scores are ambigious.
  ## requires: intent and intent_ranking
  ## outputs: entities, intent, and intent_ranking
  - name: FallbackClassifier
    threshold: 0.7


# Configuration for Rasa Core.
# https://rasa.com/docs/rasa/core/policies/
policies:
# # No configuration for policies was provided. The following default policies were used to train your model.
# # If you'd like to customize them, uncomment and adjust the policies.
# # See https://rasa.com/docs/rasa/policies for more information.
# Memorizes stories
# https://rasa.com/docs/rasa/policies/#memoization-policy
  - name: MemoizationPolicy
# Follows rules definded in rules
# https://rasa.com/docs/rasa/policies/#rule-policy
  - name: RulePolicy
    core_fallback_threshold: 0.7
    core_fallback_action_name: action_default_fallback
    enable_fallback_prediction: True
    check_for_contradictions: True
  # - name: UnexpecTEDIntentPolicy
  #   max_history: 5
  #   epochs: 100
# Transformer embedding for next action and entity prediction 
# https://rasa.com/docs/rasa/policies/#ted-policy
  - name: TEDPolicy
    max_history: 5
    epochs: 25
    constrain_similarities: true
